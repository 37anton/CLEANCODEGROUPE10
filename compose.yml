version: '3.8'

services:
  backend:
    image: node:23-alpine
    container_name: backend
    user: node
    tty: true
    stdin_open: true
    working_dir: /home/node
    entrypoint: sh -c
    command: '"npm install && npm run start:dev"'
    depends_on:
      - postgres
    env_file:
      - ./back/.env
    ports:
      - "3000:3000"
    volumes:
      - ./back:/home/node

  postgres:
    image: postgres:16.2
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-clean_code}
    volumes:
      - data-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  frontend:
    image: node:23-alpine
    container_name: frontend
    working_dir: /home/node
    tty: true
    stdin_open: true
    entrypoint: sh -c
    command: '"npm install && npm run dev -- --host"'
    depends_on:
      - backend
    env_file:
      - ./front/.env
    ports:
      - "5173:5173"
    volumes:
      - ./front:/home/node

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8080:8080"

volumes:
  data-postgres:
